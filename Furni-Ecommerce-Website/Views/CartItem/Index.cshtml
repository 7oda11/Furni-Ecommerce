@model List<Furni_Ecommerce_Shared.UserViewModel.CartItemViewModel>

@{
    ViewData["Title"] = "Cart";
}

<style>
    #generate-coupon {
        display: none;
    }

    #apply-coupon:disabled {
        opacity: 0.65;
        cursor: not-allowed;
    }
</style>

<div class="untree_co-section before-footer-section">
    <div class="container">
        <div class="row mb-5">
            <form class="col-md-12" method="get" asp-controller="checkout" asp-action="Index">
                @Html.AntiForgeryToken()
                <div class="site-blocks-table">
                    <table class="table">
                        <thead>
                            <tr>
                                <th class="product-thumbnail">Image</th>
                                <th class="product-name">Product</th>
                                <th class="product-price">Price</th>
                                <th class="product-quantity">Quantity</th>
                                <th class="product-total">Total</th>
                                <th class="product-remove">Remove</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var item in Model)
                            {
                                <tr data-stock="@item.AvailableQuantity">
                                    <td class="product-thumbnail">
                                        <img src="~/images/@item.ImagePath" class="img-fluid" style="max-width: 80px;" />
                                    </td>
                                    <td class="product-name">
                                        <h2 class="h5 text-black">@item.ProductName</h2>
                                    </td>
                                    <td class="product-price">@item.UnitPrice.ToString("0.00")</td>
                                    <td>
                                        <div class="input-group mb-3 d-flex align-items-center quantity-container" style="max-width: 120px;">
                                            <div class="input-group-prepend">
                                                <button class="btn btn-outline-black decrease" type="button">&minus;</button>
                                            </div>
                                            <input type="text" class="form-control text-center quantity" value="@item.Quantity" readonly>
                                            <div class="input-group-append">
                                                <button class="btn btn-outline-black increase" type="button">&plus;</button>
                                            </div>
                                        </div>
                                    </td>
                                    <td class="product-total">@((item.UnitPrice * item.Quantity).ToString("0.00"))</td>
                                    <td><a class="btn btn-black btn-sm remove" href="/CartItem/Delete/@item.CartItemId" onclick="return confirm('Are you sure?');">X</a></td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>

                <div class="row">
                    <div class="col-md-6">
                        <div class="row mb-5">
                            <div class="col-md-6">
                                <a href="/Shop" class="btn btn-outline-black btn-sm btn-block">Continue Shopping</a>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-6 pl-5">
                        <div class="row justify-content-end">
                            <div class="col-md-7">
                                <h3 class="text-black h4 text-uppercase">Cart Totals</h3>
                                <div class="row mb-3">
                                    <div class="col-md-6"><span class="text-black">Subtotal</span></div>
                                    <div class="col-md-6 text-right"><strong class="text-black" id="subtotal">$0.00</strong></div>
                                </div>
                                <div class="row mb-5">
                                    <div class="col-md-6"><span class="text-black">Total</span></div>
                                    <div class="col-md-6 text-right"><strong class="text-black" id="total">$0.00</strong></div>
                                </div>
                                <div class="row">
                                    <div class="col-md-12">
                                        <button class="btn btn-black btn-lg py-3 btn-block" type="submit">Proceed To Checkout</button>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </form>
        </div>
    </div>
</div>

<script>
    document.addEventListener("DOMContentLoaded", function () {
        function updateTotals() {
            let subtotal = 0;

            document.querySelectorAll("tbody tr").forEach(row => {
                const price = parseFloat(row.querySelector(".product-price").textContent) || 0;
                const qty = parseInt(row.querySelector(".quantity").value) || 0;
                const total = price * qty;
                row.querySelector(".product-total").textContent = total.toFixed(2);
                subtotal += total;
            });

            document.getElementById("subtotal").textContent = `$${subtotal.toFixed(2)}`;
            document.getElementById("total").textContent = `$${subtotal.toFixed(2)}`;
        }

        function updateQuantityInDatabase(cartItemId, newQuantity) {
            const tokenElement = document.querySelector('input[name="__RequestVerificationToken"]');
            const token = tokenElement ? tokenElement.value : '';

            const row = document.querySelector(`tr a[href="/CartItem/Delete/${cartItemId}"]`)?.closest('tr');
            if (!row) return;

            const quantityInput = row.querySelector('.quantity');
            quantityInput.disabled = true;

            fetch(`/CartItem/UpdateQuantity/${cartItemId}`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'RequestVerificationToken': token
                },
                body: JSON.stringify({ Quantity: newQuantity })
            })
            .then(response => {
                if (!response.ok) throw new Error("Failed to update");
                return response.json();
            })
            .then(data => {
                row.querySelector('.product-total').textContent = data.itemTotal;
                updateTotals();
            })
            .catch(error => {
                alert(error.message);
            })
            .finally(() => {
                quantityInput.disabled = false;
            });
        }

        document.querySelectorAll(".increase").forEach(button => {
            button.addEventListener("click", function () {
                const row = this.closest("tr");
                const input = row.querySelector(".quantity");
                const current = parseInt(input.value);
                const stock = parseInt(row.dataset.stock);
                const cartItemId = row.querySelector(".remove").getAttribute("href").split('/').pop();

                if (current < stock) {
                    input.value = current + 1;
                    updateQuantityInDatabase(cartItemId, current + 1);
                    updateTotals();
                } else {
                    alert("Cannot increase beyond available stock.");
                }
            });
        });

        document.querySelectorAll(".decrease").forEach(button => {
            button.addEventListener("click", function () {
                const row = this.closest("tr");
                const input = row.querySelector(".quantity");
                const current = parseInt(input.value);
                const cartItemId = row.querySelector(".remove").getAttribute("href").split('/').pop();

                if (current > 1) {
                    input.value = current - 1;
                    updateQuantityInDatabase(cartItemId, current - 1);
                    updateTotals();
                }
            });
        });

        updateTotals();
    });
</script>
