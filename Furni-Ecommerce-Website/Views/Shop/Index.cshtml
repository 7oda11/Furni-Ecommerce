@model List<Furni_Ecommerce_Shared.UserViewModel.ShopProductViewModel>
@Html.AntiForgeryToken()
@{
	ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_ShopLayout.cshtml";
}

<style>
	#animation-container {
		position: fixed;
		top: 0;
		left: 0;
		width: 100vw;
		height: 100vh;
		background-color: rgba(255, 255, 255, 0.8); 
		display: flex;
		justify-content: center;
		align-items: center;
		z-index: 9999;
	}

	.spinner {
		width: 60px;
		height: 60px;
		border: 7px solid #e0e0e0;
		border: 7px dashed #3B5D50;
		border-radius: 50%;
		animation: spin 5s linear infinite;
	}

	keyframes spin {
		 0%
	{
		transform: rotate(0deg);
	}

	100%
	{
		transform: rotate(360deg);
	}
	}

	.pagination .page-item.active .page-link {
		background-color: #3B5D50;
		color: white;
		border-color: #3B5D50;
	}

	.pagination .page-link {
		color: #3B5D50;
	}

		.pagination .page-link:hover {
			background-color: #e9ecef;
			border-color: #dee2e6;
		}

	#cart-message {
		z-index: 1050;
	}
</style>
<!-- Start Hero Section -->
<div class="hero">
	<input name="__RequestVerificationToken" value="@Html.AntiForgeryToken()" hidden />
	<div class="container">
		<div class="row justify-content-between">
			<div class="col-lg-5">
				<div class="intro-excerpt">
					<h1>Shop</h1>
					<div class="row">
						<form>
							<div class="row">
								<div class="col-md-6">
									<input type="search" class="form form-control" id="keyword" placeholder="Search Products..." />
								</div>
								<div class="col-md-3">
									<input type="text" class="form-control" id="minPrice" placeholder="Min Price" list="price-options">
									<datalist id="price-options">
										<option value="1000" />
										<option value="2000" />
										<option value="3000" />
										<option value="5000" />
										<option value="7000" />
										<option value="10000" />
									</datalist>
								</div>
								<div class="col-md-3">
									<input type="text" class="form-control" id="maxPrice" placeholder="Max Price" list="price-max">
									<datalist id="price-max">
										<option value="10000" />
										<option value="15000" />
										<option value="20000" />
										<option value="25000" />
										<option value="30000" />
										<option value="50000" />
										<option value="75000" />
										<option value="100000" />
									</datalist>
								</div>
								<div class="col-md-6">
									<input type="button" value="Search" class="btn btn-primary m-2" onclick="GetProducts(1)" />
								</div>
							</div>
						</form>
					</div>
				</div>
			</div>
			<div class="col-lg-7"></div>
		</div>
	<div id="toast-container" class=" position-fixed top-50 start-50 translate-middle" style="z-index:999; width:fit-content; max-width:100%;">

	</div>
	</div>
</div>
<!-- End Hero Section -->
<!-- Cart Toast Message -->
<div id="cart-message" class="alert alert-success position-fixed top-0 end-0 m-3 d-none" role="alert">
	Product added to cart!
</div>

<!-- Product Section -->
<div class="untree_co-section product-section before-footer-section">
	<div class="container">
		<div id="animation-container">
			<div class="spinner"></div>
		</div>
		<div class="row" id="products-container">
			@* Dynamic Products Go Here *@
		</div>

		<div id="pagination-container" class="text-center mt-3">
			@* Pagination Buttons Here *@
		</div>
	</div>
</div>

<script src="~/lib/jquery/dist/jquery.min.js"></script>


	<script>
		function showAnimation(){
			let container = document.getElementById("animation-container");
			if(container != null & container != undefined){
				container.classList.remove("d-none");
			}
		}

		function hideAnimation(){
			let container = document.getElementById("animation-container");
			if(container != null & container != undefined){
				container.classList.add("d-none");
			}
		}
		let currentPage =1;
		let totalPages= 1;
		function GetProducts(page =1){
			showAnimation();
			// console.log("Search");
			currentPage = page;
			var keyword = $("#keyword").val();
			var minPrice = $("#minPrice").val();
			var maxPrice = $("#maxPrice").val();
				 $("#products-container").html("");
				 $("#pagination-container").html("");

				 $.ajax({
					url: `/Shop/SearchProduct?keyword=${keyword}&minPrice=${minPrice}&maxPrice=${maxPrice}&page=${currentPage}&pageSize=8`,
					method: "GET",
					success: function (result) {
						hideAnimation();
						// console.log(result);
						let products = result.data;
						let total =result.total;
						let pageSiz= 8;
						let totalPages = Math.ceil(total / pageSiz);
						if(products.length == 0 )
						{
							$("#products-container").html(
						`
						<div class="col-12 text-center">
						<h4> No Products Found</h4>
						</div>
						`
					);
					return;
					}

						for (let item of products) {
							let card =
						`<div class="col-12 col-md-4 col-lg-3 mb-5" >
								<div class="product-item">
								 <a href="/Home/PrdDetails?id=${item.id}">
									<img src="/images/${item.imgUrl}" class="img-fluid product-thumbnail">
								  </a>
								  <h3 class="product-title">
									<a href="/Home/prodDetails?id=${item.id}" class="text-decoration-none h4">${item.name}</a>
								  </h3>
								  <p class="product-price"><strong>${item.price} EG</strong></p>
								  <p class="product-price"><strong>Stock: ${item.stock}</strong></p>

								  <button class="btn btn-outline-primary btn-sm mt-2" onclick="event.stopPropagation(); AddToCart(${item.id})">
									<img src="/images/cross.svg" class="img-fluid" style="width:15px">
								  </button>
								</div>

							</div>`
							$("#products-container").append(card)
						}

					let paginationHtml = `<nav aria-label="Page navigation example"><ul class="pagination justify-content-center">`;

					// Previous Button
					if (currentPage > 1) {
						paginationHtml += `
						<li class="page-item">
							<a class="page-link  rounded-1"  href="javascript:void(0)" onclick="GetProducts(${currentPage - 1})">Previous</a>
						</li>`;
					} else {
						paginationHtml += `
						<li class="page-item disabled">
							<span class="page-link">Previous</span>
						</li>`;
					}


					for (let i = 1; i <= totalPages; i++) {
						paginationHtml += `
						<li class="page-item ${i === currentPage ? 'active' : ''}">
							<a class="page-link rounded-1"  href="javascript:void(0)" onclick="GetProducts(${i})">${i}</a>
						</li>`;
					}

					// Next Button
					if (currentPage < totalPages) {
						paginationHtml += `
						<li class="page-item">
							<a class="page-link  rounded-1"  href="javascript:void(0)" onclick="GetProducts(${currentPage + 1})">Next</a>
						</li>`;
					} else {
						paginationHtml += `
						<li class="page-item disabled">
							<span class="page-link">Next</span>
						</li>`;
					}

					paginationHtml += `</ul></nav>`;
					$("#pagination-container").html(paginationHtml);

					},
					error: function(){
						hideAnimation();
						ShowErrorToast("Error To Loading Products");
					}

				});

		}

				const inputSearch = document.getElementById("keyword");
					if(inputSearch != null){
					inputSearch.addEventListener("change", ()=>{
					if(inputSearch.value == ""){
						GetProducts();
					}
					})
				}


				function AddToCart(productId)
				{
					let token = $('input[name="__RequestVerificationToken"]').val();
					$.ajax
					({
						url:'/Cart/AddItemToCart',
						type:'post',
						data: {productId:productId},
						withCredentials: true,
						headers: {
						'RequestVerificationToken':token
						},
						success : function(response)
						{
							console.log(response);
						if(response.success	)
						{
								//alert("Add To Cart Successfully");
								ShowToast("Add To Cart Successfully!");
								UpdateCartCount();
							

						} else if (response.redirectUrl)
							{
								window.location.href = response.redirectUrl;
							}
							else {
							ShowErrorToast("Error!,Failed To Add To Cart");
							}
						},
						error : function(err)
						{
							ShowErrorToast("Error!,Failed To Add To Cart");
						}
					});
				}


				function ShowToast(message)
				{
					const toastHtml =`
							<div class="toast" role="alert" aria-live="assertive" aria-atomic="true">
								  <div class="toast-header">
									<img src="images/true.jpeg" style="width:20px; height:20px;" class="rounded me-2" alt="...">
									<strong class="me-auto">Success!</strong>
									<small>Now</small>
									<button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Close"></button>
								  </div>
								  <div class="toast-body text-dark">
									${message}
								  </div>
							</div>
					`;
					$('#toast-container').html(toastHtml);
					$('.toast').toast({delay:3000});
					$('.toast').toast('show');

				}

				$('#keyword').on("keypress", function (e) {
					if(e.which ==13)
					{
						GetProducts(1);
					}
				}
				);

				function ShowErrorToast(message)
			{
				const toastHtml =`
						<div class="toast" role="alert" aria-live="assertive" aria-atomic="true">
							  <div class="toast-header">
								<img src="images/error.jpeg" style="width:20px; height:20px;" class="rounded me-2" alt="...">
								<strong class="me-auto">Error!</strong>
								<small>Now</small>
								<button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Close"></button>
							  </div>
							  <div class="toast-body text-dark">
								${message}
							  </div>
						</div>
				`;
				$('#toast-container').html(toastHtml);
				$('.toast').toast({delay:3000});
				$('.toast').toast('show');

			}

			function UpdateCartCount()
			{
				$.ajax({
			url:'/Cart/GetCartItemsCount',
				method:'Get',
				success: function (response){
					$("#cart-count").text(response.count)
				}
				});
			}

				$(document).ready( function(){
					GetProducts();
					UpdateCartCount();
				});

	</script>



